services:
  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: container/Dockerfile
    image: adsgem-apis-main-backend:latest
    ports:
      - "0.0.0.0:8000:8000"
    depends_on:
      - postgres
    environment:
      # Database
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB_Test=${POSTGRES_DB_Test}  
      # GPT
      - AZURE_GPT_API_KEY=${AZURE_GPT_API_KEY}
      - AZURE_GPT_API_ENDPOINT=${AZURE_GPT_API_ENDPOINT}
      # Comfy UI
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - COMFY_URL=${COMFY_URL}
      - LORA_URL=${LORA_URL}
      # LM Studio
      - LM_STUDIO_BASE_URL=${LM_STUDIO_BASE_URL}
      - LM_STUDIO_API_KEY=${LM_STUDIO_API_KEY}
      # Stable Diffusion
      - SD_BASE_URL=${SD_BASE_URL}
    volumes:
      - ./backend/src:/app/backend/src
    restart: unless-stopped

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: container/Dockerfile
    image: adsgem-apis-main-frontend:latest
    ports:
      - "0.0.0.0:80:80"
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://backend:8000/api
    restart: unless-stopped

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    ports:
      - "127.0.0.1:5432:5432"  # 数据库只允许本地访问，保证安全性
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_Test}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:
